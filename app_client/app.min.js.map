{"version":3,"sources":["main.js","jogslist/jogslist.controller.js","reports/reports.controller.js","profile/profile.controller.js","userlist/userlist.controller.js","common/services/authentication.service.js","common/services/data.service.js","auth/changepassword/changepassword.controller.js","auth/login/login.controller.js","auth/register/register.controller.js","common/directives/confirm/confirm.directive.js","common/directives/navigation/navigation.controller.js","common/directives/navigation/navigation.directive.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpnjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.min.js","sourcesContent":["(function () {\r\n\r\n  angular.module('meanApp', ['ngRoute']);\r\n\r\n  function config ($routeProvider, $locationProvider) {\r\n    $routeProvider\r\n      .when('/', {\r\n        templateUrl: '/auth/login/login.view.html',\r\n        controller: 'loginCtrl',\r\n        controllerAs: 'vm'\r\n      })\r\n      .when('/register', {\r\n        templateUrl: '/auth/register/register.view.html',\r\n        controller: 'registerCtrl',\r\n        controllerAs: 'vm'\r\n      })\r\n      .when('/login', {\r\n        templateUrl: '/auth/login/login.view.html',\r\n        controller: 'loginCtrl',\r\n        controllerAs: 'vm'\r\n      })\r\n      .when('/changepassword', {\r\n        templateUrl: '/auth/changepassword/changepassword.view.html',\r\n        controller: 'changePasswordCtrl',\r\n        controllerAs: 'vm'\r\n      })\r\n      .when('/profile', {\r\n        templateUrl: '/profile/profile.view.html',\r\n        controller: 'profileCtrl',\r\n        controllerAs: 'vm'\r\n      })\r\n      .when('/jogslist', {\r\n        templateUrl: '/jogslist/jogslist.view.html',\r\n        controller: 'jogslistCtrl',\r\n        controllerAs: 'vm'\r\n      })\r\n      .when('/userlist', {\r\n        templateUrl: '/userlist/userlist.view.html',\r\n        controller: 'userlistCtrl',\r\n        controllerAs: 'vm'\r\n      })\r\n      .when('/reports', {\r\n        templateUrl: '/reports/reports.view.html',\r\n        controller: 'reportsCtrl',\r\n        controllerAs: 'vm'\r\n      })\r\n      .otherwise({redirectTo: '/'});\r\n\r\n    // use the HTML5 History API\r\n    $locationProvider.html5Mode(true);\r\n  }\r\n\r\n  function run($rootScope, $location, authentication) {\r\n    $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\r\n\t\tif(authentication.isLoggedIn() && ($location.path() === '/login' || $location.path() === \"/\")){\r\n\t\t\t$location.path('/profile');\r\n\t\t}\r\n\t\telse if ($location.path() !== '/login' && $location.path() !== '/register' && !authentication.isLoggedIn()) {\r\n\t\t\t$location.path('/');\r\n\t\t}\r\n    });\r\n  }\r\n  \r\n  angular\r\n    .module('meanApp')\r\n    .config(['$routeProvider', '$locationProvider', config])\r\n    .run(['$rootScope', '$location', 'authentication', run]);\r\n\r\n})();","(function() {\r\n  \r\n  angular\r\n    .module('meanApp')\r\n    .controller('jogslistCtrl', jogslistCtrl);\r\n\r\n  jogslistCtrl.$inject = ['meanData'];\r\n  function jogslistCtrl(meanData) {\r\n    var vm = this;\r\n\r\n    vm.jogs = {};\r\n\r\n\tmeanData.getJogsList()\r\n\t\t.success(function(data) {\r\n\t\t\tvm.jogs.own = data;\r\n\t\t\tvm.jogs.own.title = \"OWN\";\r\n\t\t})\r\n\t\t.error(function (e) {\r\n\t\t\talert(e.message || e);\r\n\t\t\tconsole.log(e);\r\n\t\t});\r\n\tmeanData.getProfile()\r\n\t\t.success(function(data) {\r\n\t\t\tvar userData = data;\r\n\t\t\tif(userData.accountType !== 3){\r\n\t\t\t\tif(userData.accountType === 1){\t//for admins get all admins and managers\r\n\t\t\t\t\tmeanData.getJogsByAccountType(1)\r\n\t\t\t\t\t\t.success(function(data) {\r\n\t\t\t\t\t\t\t//remove own records from the list of admins\r\n\t//\t\t\t\t\t\tvm.jogs.admins = data;\r\n\t\t\t\t\t\t\tvm.jogs.admins = _.reject(data, function(item, index){\r\n\t\t\t\t\t\t\t\treturn item.user_id === userData._id;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tvm.jogs.admins.title = \"ADMINS\";\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.error(function (e) {\r\n\t\t\t\t\t\t\talert(e.message || e);\r\n\t\t\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\tmeanData.getJogsByAccountType(2)\r\n\t\t\t\t\t\t.success(function(data) {\r\n\t\t\t\t\t\t\tvm.jogs.managers = data;\r\n\t\t\t\t\t\t\tvm.jogs.managers.title = \"MANAGERS\";\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.error(function (e) {\r\n\t\t\t\t\t\t\talert(e.message || e);\r\n\t\t\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t//for managers get only users\r\n\t\t\t\tmeanData.getJogsByAccountType(3)\r\n\t\t\t\t\t.success(function(data) {\r\n\t\t\t\t\t\tvm.jogs.users = data;\r\n\t\t\t\t\t\tvm.jogs.users.title = \"USERS\";\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.error(function (e) {\r\n\t\t\t\t\t\talert(e.message || e);\r\n\t\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t})\r\n\t\t.error(function (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t});\r\n\tvm.onSubmit = function () {\r\n\t\tmeanData.createJog(vm.jog)\r\n\t\t\t.success(function(data) {\r\n\t\t\t\talert(\"Jog record created.\");\r\n\t\t\t\tvm.jogs.own.push(data);\r\n\t\t\t})\r\n\t\t\t.error(function (e) {\r\n\t\t\t\talert(e.message || e);\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t});\r\n\t};\r\n\tvm.deleteJog = function (jogId) {\r\n\t\tmeanData.deleteJog(jogId)\r\n\t\t\t.success(function(data) {\r\n\t\t\t\tvm.jogs.splice(_.findIndex(vm.jogs, {\r\n\t\t\t\t\t_id: jogId\r\n\t\t\t\t}), 1);\r\n\t\t\t\talert(\"Jog record deleted.\");\r\n\t\t\t})\r\n\t\t\t.error(function (e) {\r\n\t\t\t\talert(e.message || e);\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t});\r\n\t};\r\n\tvm.enableEditor = function(jogRecord){\r\n\t\tjogRecord.editorEnabled = true;\r\n\t};\r\n\tvm.disableEditor = function(jogRecord){\r\n\t\tjogRecord.editorEnabled = false;\r\n\t};\r\n\tvm.updateJog = function (jogRecord, index1, index2) {\r\n\t\tmeanData.updateJog(jogRecord)\r\n\t\t\t.success(function(data) {\r\n//\t\t\t\tjogRecord = data;\r\n\t\t\t\tvm.jogs[index1][index2] = data;\r\n\t\t\t\talert(\"Jog record updated.\");\r\n\t\t\t})\r\n\t\t\t.error(function (e) {\r\n\t\t\t\talert(e.message || e);\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t});\r\n\t\tvm.disableEditor(jogRecord);\r\n\t};\r\n  }\r\n\r\n})();","(function() {\r\n  \r\n  angular\r\n    .module('meanApp')\r\n    .controller('reportsCtrl', reportsCtrl);\r\n\r\n  reportsCtrl.$inject = ['meanData'];\r\n  function reportsCtrl(meanData) {\r\n    var vm = this;\r\n    vm.reports = {};\r\n    meanData.getReports()\r\n      .success(function(data) {\r\n        vm.reports = data;\r\n      })\r\n      .error(function (e) {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n})();","(function() {\r\n  \r\n  angular\r\n    .module('meanApp')\r\n    .controller('profileCtrl', profileCtrl);\r\n\r\n  profileCtrl.$inject = ['$location', 'meanData'];\r\n  function profileCtrl($location, meanData) {\r\n    var vm = this;\r\n\r\n    vm.user = {};\r\n\r\n    meanData.getProfile()\r\n      .success(function(data) {\r\n        vm.user = data;\r\n\t\tif(data.accountType === 1){\r\n\t\t\tvm.user.accountTypeLabel = \"Admin\";\r\n\t\t}\r\n\t\telse if(data.accountType === 2){\r\n\t\t\tvm.user.accountTypeLabel = \"Manager\";\r\n\t\t}\r\n\t\telse{\r\n\t\t\tvm.user.accountTypeLabel = \"User\";\r\n\t\t}\r\n      })\r\n      .error(function (e) {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n})();","(function() {\r\n  \r\n  angular\r\n    .module('meanApp')\r\n    .controller('userlistCtrl', userlistCtrl);\r\n\r\n  userlistCtrl.$inject = ['$location', 'meanData'];\r\n  function userlistCtrl($location, meanData) {\r\n    var vm = this;\r\n\r\n    vm.users = {};\r\n\r\n    meanData.getUserlist()\r\n      .success(function(data) {\r\n        vm.users = _.map(data, function(item, index){\r\n\t\t\titem.accountType = item.accountType.toString();\r\n\t\t\titem.tempData = _.clone(item);\r\n\t\t\treturn item;\r\n\t\t});\r\n      })\r\n      .error(function (e) {\r\n        console.log(e);\r\n      });\r\n\tvm.enableEditor = function(user){\r\n\t\tuser.editorEnabled = true;\r\n\t};\r\n\tvm.disableEditor = function(user, index){\r\n\t\tuser.editorEnabled = false;\r\n\t\tvm.users[index].tempData = _.clone(user);\r\n\t\tdelete vm.users[index].tempData.tempData;\r\n\t};\r\n\tvm.updateUser = function (user, index) {\r\n\t\tvm.users[index] = user.tempData;\r\n\t\tmeanData.updateUser(user.tempData)\r\n\t\t\t.success(function(data) {\r\n\t\t\t\tuser = data;\r\n\t\t\t\tvm.users[index].tempData = _.clone(user);\r\n\t\t\t\talert(\"User record updated.\");\r\n\t\t\t})\r\n\t\t\t.error(function (e) {\r\n\t\t\t\talert(e.message || e);\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t});\r\n\t\tvm.disableEditor(user, index);\r\n\t};\r\n  }\r\n\r\n})();","(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .service('authentication', authentication);\r\n\r\n  authentication.$inject = ['$http', '$window'];\r\n  function authentication ($http, $window) {\r\n\r\n    var saveToken = function (token) {\r\n      $window.localStorage['mean-token'] = token;\r\n    };\r\n\r\n    var getToken = function () {\r\n      return $window.localStorage['mean-token'];\r\n    };\r\n\r\n    var isLoggedIn = function() {\r\n      var token = getToken();\r\n      var payload;\r\n\r\n      if(token){\r\n        payload = token.split('.')[1];\r\n        payload = $window.atob(payload);\r\n        payload = JSON.parse(payload);\r\n\r\n        return payload.exp > Date.now() / 1000;\r\n      } else {\r\n        return false;\r\n      }\r\n    };\r\n\r\n    var currentUser = function() {\r\n      if(isLoggedIn()){\r\n        var token = getToken();\r\n        var payload = token.split('.')[1];\r\n        payload = $window.atob(payload);\r\n        payload = JSON.parse(payload);\r\n        return {\r\n\t\t  _id : payload._id,\r\n          email : payload.email,\r\n          name : payload.name\r\n        };\r\n      }\r\n    };\r\n\r\n    register = function(user) {\r\n      return $http.post('/api/register', user).success(function(data){\r\n        saveToken(data.token);\r\n      });\r\n    };\r\n\r\n    login = function(user) {\r\n      return $http.post('/api/login', user).success(function(data) {\r\n        saveToken(data.token);\r\n      });\r\n    };\r\n\r\n    logout = function() {\r\n      return $window.localStorage.removeItem('mean-token');\r\n    };\r\n    \r\n\tchangepassword = function(user) {\r\n      return $http.post('/api/changepassword', user).success(function(data) {\r\n        saveToken(data.token);\r\n      });\r\n    };\r\n\r\n    return {\r\n      currentUser : currentUser,\r\n      saveToken : saveToken,\r\n      getToken : getToken,\r\n      isLoggedIn : isLoggedIn,\r\n      register : register,\r\n      login : login,\r\n      logout : logout,\r\n\t  changepassword : changepassword\r\n    };\r\n  }\r\n\r\n\r\n})();","(function() {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .service('meanData', meanData);\r\n\r\n  meanData.$inject = ['$http', 'authentication'];\r\n  function meanData ($http, authentication) {\r\n\t$http.defaults.headers.common.Authorization = 'Bearer '+ authentication.getToken();\r\n    var getProfile = function () {\r\n      return $http.get('/api/profile');\r\n    };\r\n\tvar getJogsList = function () {\r\n      return $http.get('/api/jogs');\r\n    };\r\n\tvar getJogsByAccountType = function (accountType) {\r\n      return $http.get('/api/jogs/accountType/' + accountType);\r\n    };\r\n\tvar getReports = function () {\r\n      return $http.get('/api/jogs/reports');\r\n    };\r\n\tvar createJog = function (jog) {\r\n\t\tvar user = authentication.currentUser();\r\n\t\treturn $http.post('/api/jogs', _.extend({}, jog, {\"user_id\": user && user._id, \"name\": user && user.name}));\r\n    };\r\n\tvar deleteJog = function (jogId) {\r\n\t\treturn $http.delete('/api/jogs/' + jogId);\r\n    };\r\n\tvar updateJog = function (jog) {\r\n\t\treturn $http.put('/api/jogs', jog);\r\n    };\r\n\tvar updateUser = function (user) {\r\n\t\treturn $http.put('/api/userlist', user);\r\n    };\r\n\tvar getUserlist = function () {\r\n      return $http.get('/api/userlist', {\r\n        headers: {\r\n          Authorization: 'Bearer '+ authentication.getToken()\r\n        }\r\n      });\r\n    };\r\n    return {\r\n      getProfile : getProfile,\r\n\t  getUserlist : getUserlist,\r\n      getJogsList : getJogsList,\r\n\t  getJogsByAccountType: getJogsByAccountType,\r\n      getReports : getReports,\r\n\t  createJog: createJog,\r\n\t  deleteJog: deleteJog,\r\n\t  updateJog: updateJog,\r\n\t  updateUser: updateUser\r\n    };\r\n  }\r\n\r\n})();","(function () {\r\n\r\n  angular\r\n  .module('meanApp')\r\n  .controller('changePasswordCtrl', changePasswordCtrl);\r\n\r\n  changePasswordCtrl.$inject = ['$location', 'authentication', 'meanData'];\r\n  function changePasswordCtrl($location, authentication, meanData) {\r\n    var vm = this;\r\n    vm.credentials = {\r\n\t\tpassword : \"\",\r\n\t\tnewpassword: \"\"\r\n    };\r\n\r\n    vm.onSubmit = function () {\r\n\t\tif($(\"#confirm_password\").val() !== $(\"#new_password\").val()){\r\n\t\t\talert(\"New password and confirm password do not match.\");\r\n\t\t}\r\n\t\telse{\r\n\t\t\tmeanData.getProfile() \r\n\t\t\t.success(function(data) {\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tvm.credentials.email = data.email;\r\n\t\t\t\tauthentication\r\n\t\t\t\t\t.changepassword(vm.credentials)\r\n\t\t\t\t\t.error(function(err){\r\n\t\t\t\t\t\talert(err.message ? err.message : err);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then(function(){\r\n\t\t\t\t\t\talert(\"Password Changed\");\r\n\t\t\t\t\t\t$location.path('profile');\r\n\t\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.error(function (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t});\r\n\t\t}\r\n    };\r\n  }\r\n\r\n})();","(function () {\r\n\r\n  angular\r\n  .module('meanApp')\r\n  .controller('loginCtrl', loginCtrl);\r\n\r\n  loginCtrl.$inject = ['$location', 'authentication'];\r\n  function loginCtrl($location, authentication) {\r\n    var vm = this;\r\n\r\n    vm.credentials = {\r\n      email : \"\",\r\n      password : \"\"\r\n    };\r\n\r\n    vm.onSubmit = function () {\r\n      authentication\r\n        .login(vm.credentials)\r\n        .error(function(err){\r\n          alert(err.message ? err.message : err);\r\n        })\r\n        .then(function(){\r\n          //$location.path('jogslist');\r\n\t\t  window.location = \"/jogslist\";\r\n        });\r\n    };\r\n\r\n  }\r\n\r\n})();","(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .controller('registerCtrl', registerCtrl);\r\n\r\n  registerCtrl.$inject = ['$location', 'authentication'];\r\n  function registerCtrl($location, authentication) {\r\n    var vm = this;\r\n\r\n    vm.credentials = {\r\n      name : \"\",\r\n      email : \"\",\r\n      password : \"\"\r\n    };\r\n\r\n    vm.onSubmit = function () {\r\n      console.log('Submitting registration');\r\n      authentication\r\n        .register(vm.credentials)\r\n        .error(function(err){\r\n          alert(err);\r\n        })\r\n        .then(function(){\r\n          $location.path('profile');\r\n        });\r\n    };\r\n\r\n  }\r\n\r\n})();","(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .directive('ngConfirmClick', confirmClick);\r\n\r\n  function confirmClick () {\r\n    return {\r\n            link: function (scope, element, attr) {\r\n                var msg = attr.ngConfirmClick || \"Are you sure?\";\r\n                var clickAction = attr.confirmedClick;\r\n                element.bind('click',function (event) {\r\n                    if ( window.confirm(msg) ) {\r\n                        scope.$eval(clickAction)\r\n                    }\r\n                });\r\n            }\r\n        };\r\n  }\r\n\r\n})();","(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .controller('navigationCtrl', navigationCtrl);\r\n\r\n  navigationCtrl.$inject = ['$location','authentication'];\r\n  function navigationCtrl($location, authentication) {\r\n    var vm = this;\r\n\r\n    vm.isLoggedIn = authentication.isLoggedIn();\r\n\r\n    vm.currentUser = authentication.currentUser();\r\n\tvm.logout = function () {\r\n\t\t  authentication.logout();\r\n\t\t  $location.path('login');\r\n\t};\r\n  }\r\n\r\n})();","(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .directive('navigation', navigation);\r\n\r\n  function navigation () {\r\n    return {\r\n      restrict: 'EA',\r\n      templateUrl: '/common/directives/navigation/navigation.template.html',\r\n      controller: 'navigationCtrl as navvm'\r\n    };\r\n  }\r\n\r\n})();"]}